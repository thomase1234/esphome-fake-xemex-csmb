alias: Chargepoint Current Regulation
description: ""
trigger:
  - platform: time_pattern
    seconds: /2
    enabled: true
action:
  - choose:   # start of setting desired current based on charge_mode
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: Max Speed
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% if states('sensor.shell3em_main_power_factor') | float() > 0 %}
                {% set pf = 1 %}
                {% else %}
                {% set pf = -1 %}
                {% endif %}
                {% set newcurrent = states('input_number.main_maximal_current') | float() - states('sensor.shell3em_main_current') | float() * pf | float() + states('sensor.shelly3em_laadpaal_current') | float() %}
                {% if newcurrent < states('input_number.chargepoint_minimal_current') | float() -%}
                {{ states('input_number.chargepoint_minimal_current') | float() }}
                {%- else -%}
                {{ newcurrent }}
                {%- endif %}
            target:
              entity_id: input_number.chargepoint_desired_current
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: Avoid Power To Grid
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% if states('sensor.shell3em_main_power_factor') | float() > 0 %}
                {% set pf = 1 %}
                {% else %}
                {% set pf = -1 %}
                {% endif %}
                {% set newcurrent = states('sensor.shelly3em_laadpaal_current') | float() - states('sensor.shell3em_main_current') | float() * pf | float() %}
                {% if newcurrent < states('input_number.chargepoint_minimal_current') | float() -%}
                {{ states('input_number.chargepoint_minimal_current') | float() }}
                {%- else -%}
                {{ newcurrent }}
                {%- endif %}
            target:
              entity_id: input_number.chargepoint_desired_current
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: 2A From Grid
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% if states('sensor.shell3em_main_power_factor') | float() > 0 %}
                {% set pf = 1 %}
                {% else %}
                {% set pf = -1 %}
                {% endif %}
                {% set newcurrent = states('sensor.shelly3em_laadpaal_current') | float() - states('sensor.shell3em_main_current') | float() * pf | float() + 2 %}
                {% if newcurrent < states('input_number.chargepoint_minimal_current') | float() -%}
                {{ states('input_number.chargepoint_minimal_current') | float() }}
                {%- else -%}
                {{ newcurrent }}
                {%- endif %}
            target:
              entity_id: input_number.chargepoint_desired_current
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: Solar only
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% set newcurrent = states('sensor.sma_grid_phase_1_current') | float() %}
                {% if newcurrent < states('input_number.chargepoint_minimal_current') | float() -%}
                {{ states('input_number.chargepoint_minimal_current') | float() }}
                {%- else -%}
                {{ newcurrent }}
                {%- endif %}
            target:
              entity_id: input_number.chargepoint_desired_current
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: Manual Charge Speed
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% set newcurrent = states('input_number.chargepoint_manual_current') | float() %}
                {% if newcurrent < states('input_number.chargepoint_minimal_current') | float() -%}
                {{ states('input_number.chargepoint_minimal_current') | float() }}
                {%- else -%}
                {{ newcurrent }}
                {%- endif %}
            target:
              entity_id: input_number.chargepoint_desired_current
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: Manual Max Main
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% if states('sensor.shell3em_main_power_factor') | float() > 0 %}
                {% set pf = 1 %}
                {% else %}
                {% set pf = -1 %}
                {% endif %}
                {% set newcurrent = states('input_number.main_manual_current') | float() - ( states('sensor.shell3em_main_current') | float() * pf | float() - states('sensor.shelly3em_laadpaal_current') | float() ) %}
                {% if newcurrent < states('input_number.chargepoint_minimal_current') | float() -%}
                {{ states('input_number.chargepoint_minimal_current') | float() }}
                {%- else -%}
                {{ newcurrent }}
                {%- endif %}
            target:
              entity_id: input_number.chargepoint_desired_current
      - conditions:
          - condition: state
            entity_id: input_select.charge_mode
            state: Charging Off
        sequence:
          - service: input_number.set_value
            data:
              value: 0
            target:
              entity_id: input_number.chargepoint_desired_current
    enabled: true
# End of setting desired current based on charge_mode
  - choose:   # start of check if not over-amping the main fuse
      - conditions:
          - condition: template
            value_template: >-   ## check if not over-amping the main fuse
              {% if states('sensor.shell3em_main_power_factor') | float() > 0 %}
              {% set pf = 1 %}
              {% else %}
              {% set pf = -1 %}
              {% endif %}
              {{states('input_number.chargepoint_desired_current') |float() - states('sensor.shelly3em_laadpaal_current') |float() + (states('sensor.shell3em_main_current') |float()) * pf | float() > states('input_number.main_maximal_current') |float() }}
        sequence:
          - service: input_number.set_value
            data:
              value: >-
                {% if states('sensor.shell3em_main_power_factor') | float() > 0 %}
                {% set pf = 1 %}
                {% else %}
                {% set pf = -1 %}
                {% endif %}
                {{ states('input_number.main_maximal_current') |float() - states('sensor.shell3em_main_current') |float() * pf | float() + states('sensor.shelly3em_laadpaal_current') |float() }}
            target:
              entity_id: input_number.chargepoint_desired_current
#          - service: logbook.log
#            data:
#              name: chargepoint
#              message: Desired current higher than main_maximal_current
#              entity_id: input_number.main_maximal_current
    enabled: true
# End of check if not over-amping the main fuse

  - choose:   # start of check if increasing or decreasing
      - conditions:
          - condition: template
            value_template: >-   ## if load should be increased
              {{(states('input_number.chargepoint_desired_current') | float() - (states('sensor.shelly3em_laadpaal_current') |float() ) ) > 0 }}  
        sequence:
          - service: number.set_value
            data:
              value: >-
                {% set newcurrent = states('input_number.main_maximal_current') | float() - (states('input_number.chargepoint_desired_current') | float() - (states('sensor.shelly3em_laadpaal_current') |float() ) ) %}
                {% if newcurrent < state_attr('number.modbus_server_xemex_ct1current','min') %}
                {{ state_attr('number.modbus_server_xemex_ct1current','min') }}
                {% elif newcurrent > state_attr('number.modbus_server_xemex_ct1current','max') %}
                {{ state_attr('number.modbus_server_xemex_ct1current','max') }}
                {% else %}
                {{ newcurrent }}
                {% endif %}
            target:
              entity_id: number.modbus_server_xemex_ct1current
      - conditions:
          - condition: template
            value_template: >-   ## if load should be decreased
              {{(states('input_number.chargepoint_desired_current') | float() - (states('sensor.shelly3em_laadpaal_current') |float() ) ) <= 0 }}  
        sequence:
          - service: number.set_value
            data:
              value: >-
                {% set newcurrent = states('input_number.main_maximal_current') | float() - (states('input_number.chargepoint_desired_current') | float() - (states('sensor.shelly3em_laadpaal_current') |float() ) )/2 %}
                {% if newcurrent < state_attr('number.modbus_server_xemex_ct1current','min') %}
                {{ state_attr('number.modbus_server_xemex_ct1current','min') }}
                {% elif newcurrent > state_attr('number.modbus_server_xemex_ct1current','max') %}
                {{ state_attr('number.modbus_server_xemex_ct1current','max') }}
                {% else %}
                {{ newcurrent }}
                {% endif %}
            target:
              entity_id: number.modbus_server_xemex_ct1current
    enabled: true
# End of check if not over-amping the main fuse

mode: single